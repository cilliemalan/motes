
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    app: mongo
    set: ecosystem
spec:
  ports:
  - port: 27017
    name: mongo
  clusterIP: None
  selector:
    app: mongo
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: mongo
        set: ecosystem
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
    spec:
      containers:
      - name: mongo
        imagePullPolicy: IfNotPresent
        image: eu.gcr.io/$PROJECT_ID/motes-mongo:$CONTAINER_VERSION
        env:
          - name: MONGO_INITDB_DATABASE
            value: app
          - name: MONGO_INITDB_ROOT_USERNAME
            valueFrom:
              secretKeyRef:
                name: mongo
                key: rootuser
          - name: MONGO_INITDB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mongo
                key: rootpassword
          - name: MONGO_INITDB_USERNAME
            valueFrom:
              secretKeyRef:
                name: mongo
                key: user
          - name: MONGO_INITDB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mongo
                key: password
        ports:
        - containerPort: 27017
          name: mongo
        volumeMounts:
        - name: mongo-data
          mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: mongo-data
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: $DATADISKSIZE